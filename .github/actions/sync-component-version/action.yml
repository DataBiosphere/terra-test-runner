name: 'sync-component-version'
description: 'Sync MC Terra Module versions'
author: ''
inputs:
  env_type:
    description: 'Environment type: live, personal, preview'
    required: true
    default: ''
  environment:
    description: 'Environment: live - perf, personal - wsmtest, etc'
    required: true
    default: ''
  token:
    description: 'Token used to run authenticated git commands'
    required: true
    default: ''
runs:
  using: "composite"
  steps:
    # Check out terra-helm repo
    - uses: actions/checkout@v2
      with:
        repository: broadinstitute/terra-helm
        ref: master
        path: terra-helm

    - uses: actions/checkout@v2
      with:
        repository: broadinstitute/terra-helmfile
        ref: master
        token: ${{ inputs.token }}
        path: terra-helmfile

    - name: Sync MC Terra Module versions
      id: sync-terra-versions
      run: |
        set -e
        ls -l terra-helmfile
        cat terra-helmfile/versions/app/dev.yaml
        declare -a TERRA_COMPONENTS
        declare -a TERRA_COMPONENT_VERSIONS
        declare -a TERRA_COMPONENT_CHART_VERSIONS

        getIndex () {
          val=$1
          index=0
          while ((index<${#TERRA_COMPONENTS[@]}))
          do
            # echo "$index ${TERRA_COMPONENTS[$index]}"
            if [ "${TERRA_COMPONENTS[$index]}" = "$val" ]
            then
              echo $index
              return 0
            fi
            ((index++))
          done
          echo 'Not found'
          return 1
        }

        # Load default versions from terra-helmfile/versions/app/dev.yaml
        while read TERRA_COMPONENT
        do
          VERSION=$(yq e ".releases.${TERRA_COMPONENT}.appVersion" terra-helmfile/versions/app/dev.yaml)
          CHART_VERSION=$(yq e ".releases.${TERRA_COMPONENT}.chartVersion" terra-helmfile/versions/app/dev.yaml)
          echo "${TERRA_COMPONENT}_appVersion=${VERSION}" >> $GITHUB_ENV
          echo "${TERRA_COMPONENT}_chartVersion=${CHART_VERSION}" >> $GITHUB_ENV
        done < <(yq e '.releases | keys' terra-helmfile/versions/app/dev.yaml -j | jq -r -c '.[]')

      shell: bash

    - name: Echo MC Terra Module versions
      id: echo-terra-versions
      run: |
        echo "This is $agora_appVersion"
      shell: bash