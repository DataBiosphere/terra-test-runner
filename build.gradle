plugins {
    id 'java'
    id 'idea'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.jfrog.artifactory' version '4.17.2'
    id 'com.diffplug.spotless' version '5.5.1'
    id 'com.github.spotbugs' version '4.0.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8

group 'bio.terra'
version '0.1.3-SNAPSHOT'

def artifactory_username = System.getenv('ARTIFACTORY_USERNAME')
def artifactory_password = System.getenv('ARTIFACTORY_PASSWORD')

gradlePlugin {
    plugins {
        testRunnerPlugin {
            id = 'bio.terra.test-runner-plugin'
            implementationClass = 'bio.terra.testrunner.plugin.TestRunnerPlugin'
        }
    }
}

repositories {
    jcenter()
    mavenCentral()
    google()
    maven {
        url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
        credentials {
            username = "${artifactory_username}"
            password = "${artifactory_password}"
        }
    }
}

dependencies {
    ext {
        apacheMath = '3.6.1'
        apacheLang = '3.12.0'
        findbugsAnnotations = "3.0.1"
        jackson = '2.11.3'
        kubernetesClient = '10.0.0'
        logback = '1.2.3'
        slf4j = '1.7.30'

        googleCloud = '1.124.2'
        googleLogging = '1.102.0'
        googleMonitoring = '2.0.7'
        googleOauth2 = '0.22.0'
        googleStorage = '1.113.2'
        googleContainer = "v1-rev93-1.25.0"

        jgit = "5.13.0.202109080827-r"
    }

    implementation group: 'org.apache.commons', name: 'commons-math3', version: "${apacheMath}"
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: "${apacheLang}"
    compileOnly "com.google.code.findbugs:annotations:${findbugsAnnotations}"
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: "${jackson}"
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: "${jackson}"
    implementation group: 'io.kubernetes', name: 'client-java', version: "${kubernetesClient}"
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: "${logback}"
    implementation group: 'org.slf4j', name: 'slf4j-api', version: "${slf4j}"

    implementation group: 'com.google.cloud', name: 'google-cloud-bigquery', version: "${googleCloud}"
    implementation group: 'com.google.cloud', name: 'google-cloud-logging', version: "${googleLogging}"
    implementation group: 'com.google.cloud', name: 'google-cloud-monitoring', version: "${googleMonitoring}"
    implementation group: 'com.google.auth', name: 'google-auth-library-oauth2-http', version: "${googleOauth2}"
    implementation group: 'com.google.cloud', name: 'google-cloud-storage', version: "${googleStorage}"
    implementation group: 'com.google.apis', name: 'google-api-services-container', version: "${googleContainer}"

    implementation group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: "${jgit}"

    // Force transitive log4j version to at least 2.17.0 for security concerns.
    implementation('org.apache.logging.log4j:log4j-api') {
        version {
            require "2.17.0"
        }
    }
    implementation('org.apache.logging.log4j:log4j-to-slf4j') {
        version {
            require "2.17.0"
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events = ["passed", "failed", "skipped"]
    }
}

spotless {
    java {
        googleJavaFormat()
    }
}

publishing {
    publications {
        testRunnerLibrary(MavenPublication) {
            from components.java
            versionMapping {
                usage("java-runtime") {
                    fromResolutionResult()
                }
            }
        }
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(artifactoryPublish) &&
            (artifactory_username == null || artifactory_password == null)) {
        throw new GradleException("Set env vars ARTIFACTORY_USERNAME and ARTIFACTORY_PASSWORD to publish")
    }
}

artifactory {
    publish {
        contextUrl = 'https://broadinstitute.jfrog.io/broadinstitute'
        repository {
            repoKey = 'libs-snapshot-local'
            username = "${artifactory_username}"
            password = "${artifactory_password}"
        }
        defaults {
            publications('testRunnerLibrary')
            publishArtifacts = true
            publishPom = true
        }
    }
}

compileJava.dependsOn spotlessApply
